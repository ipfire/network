#!/bin/bash

. /lib/network/functions
. /lib/network/functions.ppp

while [ $# -gt 0 ]; do
	case "${1}" in
		--config=*)
			. ${1#--config=}
			;;
		*)
			action=${1}
			break
			;;
	esac
	shift
done

zone=${DEVICE}

DIR=${RED_RUN}/${LINKNAME}

case "${action}" in
	ip-up)
		mkdir -p ${DIR} 2>/dev/null

		echo "${IPREMOTE}" > ${DIR}/remote-ip-address
		echo "${IPLOCAL}"  > ${DIR}/local-ip-address

		# Update firewall with new IP address(es)

		# Prepare main routing table
		ip route add ${IPREMOTE}/32 dev ${IFNAME} src ${IPLOCAL}

		# Configure our own routing table
		ip route add table ${zone} default via ${IPREMOTE} dev ${IFNAME}

		if [ "${DEFAULTROUTE}" = "1" ]; then
			ln -sf remote-ip-address ${DIR}/gateway
			[ -n "${WEIGHT}" ] && \
				echo "${WEIGHT}" > ${DIR}/weight

			red_defaultroute_update
		fi

		if [ "${PEERDNS}" = "1" ]; then
			echo "${DNS1}" > ${DIR}/dns
			if [ -n "${DNS2}" ] && [ "${DNS1}" != "${DNS2}" ]; then
				echo "${DNS2}" > ${DIR}/dns
			fi
			red_dns_update
		fi
		;;

	ip-down)
		# Flush firewall

		if [ "${DEFAULTROUTE}" = "1" ]; then
			:
		fi

		ip route flush table ${zone}

		if [ "${PEERDNS}" = "1" ]; then
			:
		fi

		# Save statistics
		ppp_stat "${NAME}" "${CONNECT_TIME}" "${BYTES_RCVD}" "${BYTES_SENT}"
		;;
esac

exit 0

#!/bin/bash
###############################################################################
#                                                                             #
# IPFire.org - A linux based firewall                                         #
# Copyright (C) 2010  Michael Tremer & Christian Schmidt                      #
#                                                                             #
# This program is free software: you can redistribute it and/or modify        #
# it under the terms of the GNU General Public License as published by        #
# the Free Software Foundation, either version 3 of the License, or           #
# (at your option) any later version.                                         #
#                                                                             #
# This program is distributed in the hope that it will be useful,             #
# but WITHOUT ANY WARRANTY; without even the implied warranty of              #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
# GNU General Public License for more details.                                #
#                                                                             #
# You should have received a copy of the GNU General Public License           #
# along with this program.  If not, see <http://www.gnu.org/licenses/>.       #
#                                                                             #
###############################################################################

. /lib/network/header-port

HOOK_SETTINGS="HOOK DEVICE_MAC DEVICE_NAME MODE SLAVES"

DEVICE_NAME="bond0" # XXX DEVICE_NAME must be unique
DEVICE_MAC=$(mac_generate)

function _check() {
	assert isset DEVICE_MAC
	assert ismac DEVICE_MAC
	assert isset DEVICE_NAME

	assert isset SLAVES
}

function _create() {
	local zone=${1}
	shift

	local

	while [ $# -gt 0 ]; do
		case "${1}" in
			--mac=*)
				DEVICE_MAC=${1#--mac=}
				;;
			--mode=*)
				MODE=${1#--mode=}
				;;
			--slave=*)
				slave=${1#--slave=}
				SLAVES="${SLAVES} $(macify ${slave})"
				;;
			*)
				warning "Unknown argument '${1}'"
				;;
		esac
		shift
	done

	# Remove any whitespace
	SLAVES=$(echo ${SLAVES})

	_check

	config_write $(zone_dir ${zone})/port.${HOOK}.$(device_hash ${DEVICE_MAC}) ${HOOK_SETTINGS}

	exit ${EXIT_OK}
}

function _up() {
	local zone=${1}
	local port=${2}

	config_read $(zone_dir ${zone})/${port}

	if ! device_exists $(devicify ${DEVICE_MAC}); then
		device_virtual_create ${DEVICE} ${DEVICE_VID} ${DEVICE_MAC}
	fi

	local device=$(devicify ${DEVICE_MAC})

	# Set same MTU to device that the bridge has got
	device_set_mtu ${device} $(device_get_mtu ${zone})

	bridge_attach_device ${zone} ${device}

	exit ${EXIT_OK}
}

run $@

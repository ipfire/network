#!/bin/bash
###############################################################################
#                                                                             #
# IPFire.org - A linux based firewall                                         #
# Copyright (C) 2010  Michael Tremer & Christian Schmidt                      #
#                                                                             #
# This program is free software: you can redistribute it and/or modify        #
# it under the terms of the GNU General Public License as published by        #
# the Free Software Foundation, either version 3 of the License, or           #
# (at your option) any later version.                                         #
#                                                                             #
# This program is distributed in the hope that it will be useful,             #
# but WITHOUT ANY WARRANTY; without even the implied warranty of              #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
# GNU General Public License for more details.                                #
#                                                                             #
# You should have received a copy of the GNU General Public License           #
# along with this program.  If not, see <http://www.gnu.org/licenses/>.       #
#                                                                             #
###############################################################################

. /usr/lib/network/header-zone

HOOK_SETTINGS="HOOK SERVER"

SERVER=""

function hook_check() {
	assert isset SERVER
}

function hook_parse_cmdline() {
	local value

	while [ $# -gt 0 ]; do
		case "${1}" in
			--server=*)
				SERVER=$(cli_get_val ${1})
				;;
			*)
				echo "Unknown option: ${1}" >&2
				exit ${EXIT_ERROR}
				;;
		esac
		shift
	done
}

function hook_up() {
	local zone=${1}
	assert isset zone

	teredo_start ${zone}

	exit ${EXIT_OK}
}

function hook_down() {
	local zone=${1}
	assert isset zone

	teredo_stop ${zone}

	exit ${EXIT_OK}
}

function hook_status() {
	local zone=${1}
	assert isset zone

	# Print a nice header.
	cli_device_headline ${zone}

	zone_config_read ${zone}

	cli_headline 2 "Configuration"
	cli_print_fmt1 2 "Server" "${SERVER}"

	# Exit if zone is down
	if ! zone_is_up ${zone}; then
		cli_space
		exit ${EXIT_ERROR}
	fi

	cli_headline 2 "Protocol information"
	cli_print_fmt1 2 "MTU" "$(device_get_mtu ${zone})"
	cli_space

	exit ${EXIT_OK}
}

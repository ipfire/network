#!/bin/sh
########################################################################
# Begin $NETWORK_DEVICES/services/ipv4-static
#
# Description : IPV4 Static Boot Script
#
# Authors     : Nathan Coulson - nathan@linuxfromscratch.org
#               Kevin P. Fleming - kpfleming@linuxfromscratch.org
#
# Version     : 00.00
#
# Notes       :
#
########################################################################

. /lib/network/hook-header

HOOK_NAME="ipv4-static"
HOOK_TYPE="zone"

function check_config() {
	args=
	if [ -z "${IP}" ]; then
		log_failure_msg "IP variable missing, cannot continue."
		exit ${EXIT_CONF_ERROR}
	fi
	
	if [ -z "${PREFIX}" -a -z "${PEER}" ]; then
		log_warning_msg "PREFIX variable missing, assuming 24."
		PREFIX=24
		args="${args} ${IP}/${PREFIX}"
	elif [ -n "${PREFIX}" -a -n "${PEER}" ]; then
		log_failure_msg "PREFIX and PEER both specified, cannot continue."
		exit ${EXIT_CONF_ERROR}
	elif [ -n "${PREFIX}" ]; then
		args="${args} ${IP}/${PREFIX}"
	elif [ -n "${PEER}" ]; then
		args="${args} ${IP} peer ${PEER}"
	fi
	
	if [ -n "${BROADCAST}" ]; then
		args="${args} broadcast ${BROADCAST}"
	fi
	
	if [ -n "${SOURCE}" ]; then
		args="${args} src ${SOURCE}"
	fi
}

case "${action}" in
	help)
		;;

    info)
        echo "HOOK_NAME=$HOOK_NAME"
        echo "HOOK_TYPE=$HOOK_TYPE"
        ;;

	status)
		check_config
		echo -e "#  ${CLR_BOLD_CYN}IPv4 static: ${IP}/${PREFIX}${NORMAL}"
		if [ -n "${GATEWAY}" ]; then
			echo    "#    Gateway: ${GATEWAY}"
			echo -n "#      Reachable: "
			if ping -c1 -w1 -I ${zone} ${GATEWAY} &>/dev/null; then
				echo -e "${CLR_BOLD_GRN}yes${NORMAL}"
			else
				echo -e "${CLR_BOLD_RED}no${NORMAL}"
			fi
		fi
		ip addr show ${zone} | grep "inet " | fgrep -q "${IP}/${PREFIX}"
		exit ${?}
		;;

	pre-up)
		;;

	post-up)
		check_config
		if ! device_has_ipv4 ${zone} ${IP}; then
			MESSAGE="Adding IPv4 address ${IP} to zone ${zone} interface..."
			ip addr add ${args} dev ${zone}
			evaluate_retval
		fi
	
		if [ -n "${GATEWAY}" ]; then
			if ip route | grep -q default; then
				log_warning_msg "Gateway already setup; skipping." ${WARNING}
			else
				MESSAGE="Setting up default gateway..."
				ip route add default via ${GATEWAY} dev ${zone}
				evaluate_retval
			 fi
		fi
	;;

	pre-down)
		check_config
		if [ -n "${GATEWAY}" ];	then
			MESSAGE="Removing default gateway..."
			ip route del default
			evaluate_retval
		fi
	
		if device_has_ipv4 ${zone} ${IP}; then
			MESSAGE="Removing IPv4 address ${IP} from zone ${zone}..."
			ip addr del ${args} dev ${zone}
			evaluate_retval
		fi
		;;

	post-down)
		;;

	add)
		while [ $# -gt 0 ]; do
			case "$1" in
				--ip=*)
					IP=${1#--ip=}
					;;
				--prefix=*)
					PREFIX=${1#--prefix=}
					;;
				--peer=*)
					PEER=${1#--peer=}
					;;
				--broadcast=*)
					BROADCAST=${1#--broadcast=}
					;;
				--source=*)
					SOURCE=${1#--source=}
					;;
				--gateway=*)
					GATEWAY=${1#--gateway=}
					;;
				*)
					echo "Unknown option: $1" >&2
					exit 1
					;;
			esac
			shift
		done
		#check_config
		cat <<EOF >${CONFIG_ZONES}/${zone}/ipv4-static_$IP
HOOK="${HOOK_NAME}"
IP="${IP}"
PREFIX="${PREFIX}"
PEER="${PEER}"
BROADCAST="${BROADCAST}"
SOURCE="${SOURCE}"
GATEWAY="${GATEWAY}"
EOF
		[ "$?" = "0" ] && exit ${EXIT_OK} || exit ${EXIT_ERROR}
		;;

	rem)
		;;
	
	discover)
		exit ${EXIT_ERROR}
		;;

	*)
		echo "Usage: ${0} {config|pre-up|post-up|pre-down|post-down|status} [interface]"
		exit ${EXIT_ERROR}
	;;
esac

# End $NETWORK_DEVICES/services/ipv4-static

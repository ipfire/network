#!/bin/bash
###############################################################################
#                                                                             #
# IPFire.org - A linux based firewall                                         #
# Copyright (C) 2010  Michael Tremer & Christian Schmidt                      #
#                                                                             #
# This program is free software: you can redistribute it and/or modify        #
# it under the terms of the GNU General Public License as published by        #
# the Free Software Foundation, either version 3 of the License, or           #
# (at your option) any later version.                                         #
#                                                                             #
# This program is distributed in the hope that it will be useful,             #
# but WITHOUT ANY WARRANTY; without even the implied warranty of              #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
# GNU General Public License for more details.                                #
#                                                                             #
# You should have received a copy of the GNU General Public License           #
# along with this program.  If not, see <http://www.gnu.org/licenses/>.       #
#                                                                             #
###############################################################################

. /lib/network/header-port

HOOK_SETTINGS="HOOK DEVICE"

function _check() {
	assert isset DEVICE
	assert ismac DEVICE
}

function _create() {
	local zone=${1}
	local device=${2}
	shift 2

	if [ -z "${device}" ]; then
		error "No device given."
		exit ${EXIT_ERROR}
	fi

	if ! device_exists ${device}; then
		warning "Device does not exist."
	fi

	DEVICE=$(macify ${device})

	config_write $(zone_dir ${zone})/port.${HOOK}.$(device_hash ${device}) ${HOOK_SETTINGS}

	exit ${EXIT_OK}
}

function _up() {
	local zone=${1}
	local port=${2}

	config_read $(zone_dir ${zone})/${port}

	local device=$(devicify ${DEVICE})

	if ! device_exists ${device}; then
		warning "Device '${DEVICE}' does not exist."
		exit ${EXIT_ERROR}
	fi

	# Set same MTU to device that the bridge has got
	device_set_mtu ${device} $(device_get_mtu ${zone})

	device_set_up ${device}

	bridge_attach_device ${zone} ${device}

	exit ${EXIT_OK}
}

function _down() {
	local zone=${1}
	local port=${2}

	config_read $(zone_dir ${zone})/${port}

	local device=$(devicify ${DEVICE})

	if ! device_exists ${device}; then
		warning "Device '${DEVICE}' does not exist."
		exit ${EXIT_ERROR}
	fi

	bridge_detach_device ${zone} ${device}

	device_set_down ${device}

	exit ${EXIT_OK}
}

run $@

HOOKS README

A hook is file that can configure a specific network connection (e.g. ethernet)
or protocol (e.g. ipv4-static).

They are expandable and standalone. Means, when you call a file, you will
run it and pass some options and an action to it.

  /lib/network/hooks/HOOOK [options] <action> [options to action]

There are two types of hooks:
	zone
		These hooks applies to a zone and does configuration on it.
		Mainly, it configures the IP protocol or something else.
	
	port
		These hooks add ports to zones.

DEFINES:
	So, to know what type of hook this is, we have to define some variables
	in the header of the file.
	
	HOOK_NAME
		The name of the hook. This is normally the file name.
	
	HOOK_TYPE
		zone or port. See section above.

		
INLCUDES:
	These files get included in the header.

	/lib/lsb/init-functions
		For pretty messages

	/lib/network/functions
		Our networking funktions.

		
OPTIONS:
	Options have at least to be for zone file:

	--config=CONFIG
		Includes the given config file CONFIG.
		If there is an error when loading the config file or the parameters are
		wrong or invalid, the script will pass an error with code ${EXIT_CONF_ERROR}!

	--port=PORT
		Takes a port (either as device (eth0) or as mac (00:11:22:33:44:55)).

	--zone=ZONE
		Takes the name of a zone.


ACTION:
	Actions that always have to be defined:
		help
			Gives the user a short help how to use the command and its arguments.

		info
			Gives some information about the hook (mainly for internal use of the scripts).
			See below.

		status
			Gives information if the hook is active or not.

		config
			This is the command that creates the configuration for each hook.
			It will accept some more arguments in the command line
			and return either ${EXIT_OK} or ${EXIT_ERROR}.

	Actions that have to be defined for a zone hook:
		pre-up
			This gets runned before the zone gets up.
		
		pre-down.
			This is runned before the zone is set down.
		
		post-up
			After setting up the zone, this command will be executed.
		
		post-down
			After the zone has vanished, this part of the script is called.

		All these actions will return ${EXIT_OK} when everything went fine.
		If not, they will return ${EXIT_ERROR}.
